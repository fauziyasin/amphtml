workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "69d2c1b2b64cc3f1c332ca570717799d5c41d1ec0426239ea15904bcba605d9e",
    strip_prefix = "abseil-cpp-4a6ea63d35d28785b87c51536aed00362a94c5f9",
    urls = ["https://github.com/abseil/abseil-cpp/archive/4a6ea63d35d28785b87c51536aed00362a94c5f9.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "17d1d88665fb1812d496b97fc83cb71ed995b648397823d77a3d7b188263aec9",
    strip_prefix = "googletest-518387203b573f35477fa6872dd54620e70d2bdb",
    urls = ["https://github.com/google/googletest/archive/518387203b573f35477fa6872dd54620e70d2bdb.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "b85494cc9a9ed8ae350aa5e8e69b93a0631520977a41e5dec86fbbed5bba515b",
    strip_prefix = "protobuf-6df7f0bbef9643f4fdf5c340a49988298044824d",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/6df7f0bbef9643f4fdf5c340a49988298044824d.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "4feea97f4b0f0eb45bbb4b044546d3bb3d00b61619d3e32dd956bf2b5bb1cea0",
    strip_prefix = "re2-a0b3bc60c3a42b4e572bf643fa0e10bf60dcc872",
    urls = ["https://github.com/google/re2/archive/a0b3bc60c3a42b4e572bf643fa0e10bf60dcc872.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "5f862a44bbd032e1b48ed53c9c211ba2a1da60e10c5baa01c97369c249299ecb",
    strip_prefix = "rules_cc-c8c38f8c710cbbf834283e4777916b68261b359c",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/c8c38f8c710cbbf834283e4777916b68261b359c.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "0c1f37048ac6d07dfa0ab6d8b587734d0310f24d43d0a1f02f965432587dd365",
    strip_prefix = "rules_proto-c9731b887d4b897a6fe14367c8e3f4e225f45f53",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/c9731b887d4b897a6fe14367c8e3f4e225f45f53.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/c9731b887d4b897a6fe14367c8e3f4e225f45f53.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "a0db769106f866a701920be15136a1de79d19cef40ec0fd99d12c20d9bf66306",
    strip_prefix = "emsdk-40e9cd8fbc03cf3c4041d965d9a05b843996b479/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/40e9cd8fbc03cf3c4041d965d9a05b843996b479.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "39377dcd77cd489199782d118d9eae3c0ab5b7ca3ed1af33dc246357fa26511b",
    strip_prefix = "closure-library-f4fc04227dda7ec6ed2cd81210dfac4af512a057",
    urls = ["https://github.com/google/closure-library/archive/f4fc04227dda7ec6ed2cd81210dfac4af512a057.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
